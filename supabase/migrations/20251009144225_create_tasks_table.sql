-- 1. Buat tabel tasks BARU kamu
-- (SAYA TAMBAHKAN 'user_id' YANG SANGAT PENTING UNTUK KEAMANAN)
create table "public"."tasks" (
    "id" bigint generated by default as identity primary key,
    "user_id" uuid references auth.users(id) on delete cascade not null default auth.uid(),
    "title" text,
    "completed" boolean default false,
    "deadline" timestamp with time zone,
    "created_at" timestamp with time zone not null default now()
);

-- 2. AKTIFKAN Keamanan (RLS)
alter table "public"."tasks" enable row level security;

-- 3. BUAT POLICY YANG AMAN (GANTIKAN SEMUA POLICY LAMA KAMU)
-- 'authenticated' = user yang sudah login
-- 'auth.uid()' = ID user yang sedang login

-- Policy 1: User bisa LIHAT data tasks MEREKA SENDIRI
create policy "User bisa lihat data tasks mereka sendiri"
on "public"."tasks"
as permissive
for select
to authenticated
using (auth.uid() = user_id);

-- Policy 2: User bisa BUAT data tasks baru (untuk diri mereka sendiri)
create policy "User bisa buat task baru"
on "public"."tasks"
as permissive
for insert
to authenticated
with check (auth.uid() = user_id);

-- Policy 3: User bisa UPDATE data tasks MEREKA SENDIRI
create policy "User bisa update data tasks mereka sendiri"
on "public"."tasks"
as permissive
for update
to authenticated
using (auth.uid() = user_id)
with check (auth.uid() = user_id);

-- Policy 4: User bisa HAPUS data tasks MEREKA SENDIRI
create policy "User bisa hapus data tasks mereka sendiri"
on "public"."tasks"
as permissive
for delete
to authenticated
using (auth.uid() = user_id);

-- JANGAN TAMBAHKAN 'grant ... to anon ...' YANG BERBAHAYA ITU